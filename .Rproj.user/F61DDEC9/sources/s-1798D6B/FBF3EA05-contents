create <- function( file.origine,file.new ){

  rhdf5::h5createFile(file.new)
  read<-rhdf5::h5read(file.origine, "/", bit64conversion='bit64')
  timVn<- read$TimingData$BufTimes
  mzVn <- read$FullSpectra$MassAxis
  rawAN <- read$FullSpectra$TofData
  rawMN <- matrix(rawAN,
                  nrow = dim(rawAN)[1],
                  ncol = prod(tail(dim(rawAN),2)),
                  dimnames = list(mzVn, c(timVn))) #* 0.2 ns / 2.9 (single ion signal)
  index_zero<-which(timVn==0)[-1] #index where timVn =0 except the first time

  if(length(index_zero)!=0){
    timVn<- timVn[-index_zero]
    rawMN<- rawMN[,-index_zero]
  }

  ## craete group and subgroup
  listGroup <- rhdf5::h5ls(file.origine)
  group<-listGroup[listGroup$otype ==  "H5I_GROUP",]
  for( i in 1:dim(group)[1])
    rhdf5::h5createGroup(file.new,paste(group$group[i],group$name[i],sep="/"))

  ## write data
  data<-listGroup[listGroup$otype ==  "H5I_DATASET",]

  ## No change
  DATASET<-paste(data$group,data$name,sep="/")
  DATASETNochange<-  c( "/AcquisitionLog/Log",
                        "/AddTraces/PTR-Instrument/TwInfo" ,
                        "/AddTraces/PTR-Misc/TwInfo",
                        "/AddTraces/PTR-Reaction/TwInfo",
                        "/PTR-Concentration/TwInfo",
                        "/PTR-Peaktable/Info",
                        "/PTR-Peaktable/Data",
                        "/PTR-PrimaryIonSettings/Data",
                        "/PTR-PrimaryIonSettings/Info" ,
                        "/PTR-Transmission/Data",
                        "/PTR-Transmission/Info",
                        "/PeakData/PeakTable",
                        "/RawData/Ndigo5G/Temperature/TwInfo",
                        "/TPS2/TwInfo")

  for(i in 1:dim(data)[1]){
    harchi <- paste(data$group[i],data$name[i],sep="/")
    if(harchi %in% DATASETNochange){
      harchi_sep <- strsplit(harchi,"/")[[1]][-1]
      if(length(harchi_sep)==3)
        rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]][[harchi_sep[3]]],file.new,harchi)
      if(length(harchi_sep)==2)
        rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]],file.new,harchi)
    }
  }

  ## dim change
  tof <- which( ( 20.4 < mzVn & mzVn < 21.6) |  (56.4 < mzVn & mzVn <90.6)  )
  mzVn_new <- mzVn[tof]
  NbrSample <-length(mzVn_new)

  #TIC <- colSums(rawMN)
  #indLim<-ptairMS:::timeLimitFun(TIC,fracMaxTIC = 0.1)
  # if( ncol(indLim) >2 ){
  #   timVn_new <- timVn[
  #     seq(
  #       max(1 ,
  #         (indLim["start",1]-5)
  #         ) ,
  #       min( (indLim["end",2]+5) ,
  #          mean(indLim["end",2],indLim["start",3])
  #          )
  #     )]
  # } else timVn_new <-timVn[ seq(max(1,indLim["start",1]-5),min(indLim["end",2]+5,length(timVn)))]
  timVn_new<-timVn
  NbrWrite <- ceiling(length(timVn_new)/10)
  rawMN_new <- rawMN[tof, timVn_new]
  rawAN_new <- array(rawMN_new, dim= c(NbrSample,1,10,NbrWrite))

  DATASETChange <- DATASET[ ! DATASET %in% DATASETNochange]
  ChangeTime<- c("/AddTraces/PTR-Instrument/TwData",
                 "/AddTraces/PTR-Misc/TwData",
                 "/AddTraces/PTR-Reaction/TwData" ,
                 "/FullSpectra/MassCalibration",
                 "/PTR-Concentration/TwData",
                 "/PeakData/PeakData",
                 "/RawData/Ndigo5G/Temperature/TwData",
                 "/TPS2/TwData",
                 "/TimingData/BufTimes")

  ## "/FullSpectra/TofData" faire a la main
  for(i in 1:dim(data)[1]){
    harchi <- paste(data$group[i],data$name[i],sep="/")
    harchi_sep <- strsplit(harchi,"/")[[1]][-1]
    data.i<-read
    for (j in 1:length(harchi_sep)){
      data.i <- data.i[[harchi_sep[j]]]
    }

    if(harchi %in% ChangeTime) {
      dimNew <-dim(data.i)
      dimNew[length(dimNew)] <- NbrWrite
      data.i.new <- array(data.i, dim=dimNew)

      rhdf5::h5write(data.i.new,file.new,harchi)
    }
  }

  ChangeMass<- c("/FullSpectra/MassAxis" ,"/FullSpectra/SumSpectrum", "/FullSpectra/TofData")

  rhdf5::h5write(mzVn_new,file.new, "/FullSpectra/MassAxis")
  rhdf5::h5createDataset(file.new,"/FullSpectra/TofData", dim(rawAN_new), chunk = c(dim(rawAN_new)[1],1,10,1),level = 9)
  rhdf5::h5write(rawAN_new,file.new, "/FullSpectra/TofData")
  rhdf5::h5write(rowSums(rawMN_new),file.new, "/FullSpectra/SumSpectrum")
} #END function

dirOrigin<-"C:/Users/CR258086/Documents/Source/DataPtrMS/Healthy"
dir<-"C:/Users/CR258086/Documents/Source/ptrData/inst/extdata/exhaledAir"

c<-2
for (subFold in list.dirs(dirOrigin,full.names = F,recursive = F)[-1]){
listFiles<-list.files(paste(dirOrigin,subFold,sep="/"),full.names = T)
j<-1
  for(file in listFiles){
    create(file,file.path(paste(dir,paste0("individual",c),sep="/"),paste0("individual",c,"-",j,".h5")))
    j<-j+1
  }
c<-c+1
}

dirOrigin<-"C:/Users/CR258086/Documents/Source/DataPtrMS/MycoBacteria"
dir<-"C:/Users/CR258086/Documents/Source/ptairData/inst/extdata/mycobacteria"
subFold<-list.dirs(dirOrigin,full.names = F,recursive = F)
renameSubFold<- c("Specie-a","Control","specie-b")
for (c in 1:length(subFold) ){
  listFiles<-list.files(paste(dirOrigin,subFold[c],sep="/"),full.names = T)
  j<-1
  for(file in listFiles){
    create(file,file.path(paste(dir,renameSubFold[c],sep="/"),paste0(renameSubFold[c],j,".h5")))
    j<-j+1
  }

}
