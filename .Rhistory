if(length(index_zero)!=0){
timVn<- timVn[-index_zero]
rawMN<- rawMN[,-index_zero]
}
## craete group and subgroup
listGroup <- rhdf5::h5ls(file.origine)
group<-listGroup[listGroup$otype ==  "H5I_GROUP",]
for( i in 1:dim(group)[1])
rhdf5::h5createGroup(file.new,paste(group$group[i],group$name[i],sep="/"))
## write data
data<-listGroup[listGroup$otype ==  "H5I_DATASET",]
## No change
DATASET<-paste(data$group,data$name,sep="/")
DATASETNochange<-  c( "/AcquisitionLog/Log",
"/AddTraces/PTR-Instrument/TwInfo" ,
"/AddTraces/PTR-Misc/TwInfo",
"/AddTraces/PTR-Reaction/TwInfo",
"/PTR-Concentration/TwInfo",
"/PTR-Peaktable/Info",
"/PTR-Peaktable/Data",
"/PTR-PrimaryIonSettings/Data",
"/PTR-PrimaryIonSettings/Info" ,
"/PTR-Transmission/Data",
"/PTR-Transmission/Info",
"/PeakData/PeakTable",
"/RawData/Ndigo5G/Temperature/TwInfo",
"/TPS2/TwInfo")
for(i in 1:dim(data)[1]){
harchi <- paste(data$group[i],data$name[i],sep="/")
if(harchi %in% DATASETNochange){
harchi_sep <- strsplit(harchi,"/")[[1]][-1]
if(length(harchi_sep)==3)
rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]][[harchi_sep[3]]],file.new,harchi)
if(length(harchi_sep)==2)
rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]],file.new,harchi)
}
}
## dim change
#tof <- which( ( 20.4 < mzVn & mzVn < 21.6) |  (56.4 < mzVn & mzVn <90.6)  )
tof <- which(( 20.4 < mzVn & mzVn < 21.6) | (39.3 < mzVn & mzVn <135.7))
mzVn_new <- mzVn[tof]
NbrSample <-length(mzVn_new)
#TIC <- colSums(rawMN)
#indLim<-ptairMS:::timeLimitFun(TIC,fracMaxTIC = 0.1)
# if( ncol(indLim) >2 ){
#   timVn_new <- timVn[
#     seq(
#       max(1 ,
#         (indLim["start",1]-5)
#         ) ,
#       min( (indLim["end",2]+5) ,
#          mean(indLim["end",2],indLim["start",3])
#          )
#     )]
# } else timVn_new <-timVn[ seq(max(1,indLim["start",1]-5),min(indLim["end",2]+5,length(timVn)))]
if(is.null(indexTime)) indexTime<-seq(1,length(timVn))
timVn_new<-timVn[indexTime]
NbrWrite <- ceiling(length(timVn_new)/10)
rawMN_new <- rawMN[tof, timVn_new]
rawAN_new <- array(rawMN_new, dim= c(NbrSample,1,10,NbrWrite))
DATASETChange <- DATASET[ ! DATASET %in% DATASETNochange]
ChangeTime<- c("/AddTraces/PTR-Instrument/TwData",
"/AddTraces/PTR-Misc/TwData",
"/AddTraces/PTR-Reaction/TwData" ,
"/FullSpectra/MassCalibration",
"/PTR-Concentration/TwData",
"/PeakData/PeakData",
"/RawData/Ndigo5G/Temperature/TwData",
"/TPS2/TwData",
"/TimingData/BufTimes")
## "/FullSpectra/TofData" faire a la main
for(i in 1:dim(data)[1]){
harchi <- paste(data$group[i],data$name[i],sep="/")
harchi_sep <- strsplit(harchi,"/")[[1]][-1]
data.i<-read
for (j in 1:length(harchi_sep)){
data.i <- data.i[[harchi_sep[j]]]
}
if(harchi %in% ChangeTime) {
dimNew <-dim(data.i)
dimNew[length(dimNew)] <- NbrWrite
data.i.new <- array(data.i, dim=dimNew)
rhdf5::h5write(data.i.new,file.new,harchi)
}
}
ChangeMass<- c("/FullSpectra/MassAxis" ,"/FullSpectra/SumSpectrum", "/FullSpectra/TofData")
rhdf5::h5write(mzVn_new,file.new, "/FullSpectra/MassAxis")
rhdf5::h5createDataset(file.new,"/FullSpectra/TofData", dim(rawAN_new), chunk = c(dim(rawAN_new)[1],1,10,1),level = 9)
rhdf5::h5write(rawAN_new,file.new, "/FullSpectra/TofData")
rhdf5::h5write(rowSums(rawMN_new),file.new, "/FullSpectra/SumSpectrum")
} #END function
#indivdual1-1
index<-c(seq(13,38),seq(39,65,by=5),seq(66,90))
plot(TIC[index])
#indivdual1-1
index<-c(seq(13,38),seq(39,65,by=6),seq(66,90))
plot(TIC[index])
65-39
26/6
#indivdual1-1
index<-c(seq(13,38),seq(39,65,length.out =6),seq(66,90))
plot(TIC[index])
,seq(39,65,length.out =6)
seq(39,65,length.out =6)
#indivdual1-1
index<-c(seq(13,38),round(seq(39,65,length.out =6)),seq(66,90))
plot(TIC[index])
#indivdual1-1
index<-c(seq(13,38),round(seq(39,65,length.out =5)),seq(66,90))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),index)
#indivdual1-1
index<-c(seq(13,38),round(seq(39,65,length.out =5)),seq(66,88))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),index)
#indivdual1-1
index<-c(seq(13,38),round(seq(39,65,length.out =5)),seq(66,88))
plot(TIC[index])
#indivdual1-1
index<-c(seq(14,38),round(seq(39,65,length.out =5)),seq(66,88))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),index)
create <- function( file.origine,file.new ,indexTime=NULL){
rhdf5::h5createFile(file.new)
read<-rhdf5::h5read(file.origine, "/", bit64conversion='bit64')
timVn<- read$TimingData$BufTimes
mzVn <- read$FullSpectra$MassAxis
rawAN <- read$FullSpectra$TofData
rawMN <- matrix(rawAN,
nrow = dim(rawAN)[1],
ncol = prod(tail(dim(rawAN),2)),
dimnames = list(mzVn, c(timVn))) #* 0.2 ns / 2.9 (single ion signal)
index_zero<-which(timVn==0)[-1] #index where timVn =0 except the first time
if(length(index_zero)!=0){
timVn<- timVn[-index_zero]
rawMN<- rawMN[,-index_zero]
}
## craete group and subgroup
listGroup <- rhdf5::h5ls(file.origine)
group<-listGroup[listGroup$otype ==  "H5I_GROUP",]
for( i in 1:dim(group)[1])
rhdf5::h5createGroup(file.new,paste(group$group[i],group$name[i],sep="/"))
## write data
data<-listGroup[listGroup$otype ==  "H5I_DATASET",]
## No change
DATASET<-paste(data$group,data$name,sep="/")
DATASETNochange<-  c( "/AcquisitionLog/Log",
"/AddTraces/PTR-Instrument/TwInfo" ,
"/AddTraces/PTR-Misc/TwInfo",
"/AddTraces/PTR-Reaction/TwInfo",
"/PTR-Concentration/TwInfo",
"/PTR-Peaktable/Info",
"/PTR-Peaktable/Data",
"/PTR-PrimaryIonSettings/Data",
"/PTR-PrimaryIonSettings/Info" ,
"/PTR-Transmission/Data",
"/PTR-Transmission/Info",
"/PeakData/PeakTable",
"/RawData/Ndigo5G/Temperature/TwInfo",
"/TPS2/TwInfo")
for(i in 1:dim(data)[1]){
harchi <- paste(data$group[i],data$name[i],sep="/")
if(harchi %in% DATASETNochange){
harchi_sep <- strsplit(harchi,"/")[[1]][-1]
if(length(harchi_sep)==3)
rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]][[harchi_sep[3]]],file.new,harchi)
if(length(harchi_sep)==2)
rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]],file.new,harchi)
}
}
## dim change
#tof <- which( ( 20.4 < mzVn & mzVn < 21.6) |  (56.4 < mzVn & mzVn <90.6)  )
tof <- which(( 20.4 < mzVn & mzVn < 21.6) | (39.3 < mzVn & mzVn <135.7))
mzVn_new <- mzVn[tof]
NbrSample <-length(mzVn_new)
#TIC <- colSums(rawMN)
#indLim<-ptairMS:::timeLimitFun(TIC,fracMaxTIC = 0.1)
# if( ncol(indLim) >2 ){
#   timVn_new <- timVn[
#     seq(
#       max(1 ,
#         (indLim["start",1]-5)
#         ) ,
#       min( (indLim["end",2]+5) ,
#          mean(indLim["end",2],indLim["start",3])
#          )
#     )]
# } else timVn_new <-timVn[ seq(max(1,indLim["start",1]-5),min(indLim["end",2]+5,length(timVn)))]
if(is.null(indexTime)) indexTime<-seq(1,length(timVn))
timVn_new<-timVn[indexTime]
NbrWrite <- ceiling(length(timVn_new)/10)
rawMN_new <- rawMN[tof, timVn_new]
rawAN_new <- array(rawMN_new, dim= c(NbrSample,1,10,NbrWrite))
DATASETChange <- DATASET[ ! DATASET %in% DATASETNochange]
ChangeTime<- c("/AddTraces/PTR-Instrument/TwData",
"/AddTraces/PTR-Misc/TwData",
"/AddTraces/PTR-Reaction/TwData" ,
"/FullSpectra/MassCalibration",
"/PTR-Concentration/TwData",
"/PeakData/PeakData",
"/RawData/Ndigo5G/Temperature/TwData",
"/TPS2/TwData",
"/TimingData/BufTimes")
## "/FullSpectra/TofData" faire a la main
for(i in 1:dim(data)[1]){
harchi <- paste(data$group[i],data$name[i],sep="/")
harchi_sep <- strsplit(harchi,"/")[[1]][-1]
data.i<-read
for (j in 1:length(harchi_sep)){
data.i <- data.i[[harchi_sep[j]]]
}
if(harchi %in% ChangeTime) {
dimNew <-dim(data.i)
dimNew[length(dimNew)] <- NbrWrite
data.i.new <- array(data.i, dim=dimNew)
rhdf5::h5write(data.i.new,file.new,harchi)
}
}
ChangeMass<- c("/FullSpectra/MassAxis" ,"/FullSpectra/SumSpectrum", "/FullSpectra/TofData")
rhdf5::h5write(mzVn_new,file.new, "/FullSpectra/MassAxis")
rhdf5::h5createDataset(file.new,"/FullSpectra/TofData", dim(rawAN_new), chunk = c(dim(rawAN_new)[1],1,10,1),level = 9)
rhdf5::h5write(rawAN_new,file.new, "/FullSpectra/TofData")
rhdf5::h5write(rowSums(rawMN_new),file.new, "/FullSpectra/SumSpectrum")
} #END function
#indivdual1-1
index<-c(seq(14,38),round(seq(39,65,length.out =5)),seq(66,88))
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),indexTime=index)
#indivdual1-1
index<-c(seq(35,38),round(seq(39,65,length.out =5)),seq(66,88))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),indexTime=index)
#indivdual1-1
index<-c(seq(14,38),round(seq(39,65,length.out =5)),seq(66,88))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),indexTime=index)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T)[1])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#indivicual1-2
index<-c(seq(15,35),round(seq(36,67,length.out =5)),seq(68,35))
plot(TIC[index])
#indivicual1-2
index<-c(seq(15,35),round(seq(36,67,length.out =5)),seq(68,85))
plot(TIC[index])
#indivicual1-2
index<-c(seq(15,35),round(seq(36,67,length.out =5)),seq(68,87))
plot(TIC[index])
#indivicual1-2
index<-c(seq(14,35),round(seq(36,67,length.out =5)),seq(68,87))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T)[2],paste(dir,"ind1/ind1-2.h5",sep="/"),indexTime=index)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T)[2])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#indivdual1-1
index<-c(seq(14,35),round(seq(36,67,length.out =5)),seq(68,87))
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),indexTime=index)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T)[2])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#indivicual1-2
index<-c(seq(11,29),round(seq(30,65,length.out =5)),seq(66,76))
plot(TIC[index])
#indivicual1-2
index<-c(seq(11,29),round(seq(30,65,length.out =5)),seq(66,79))
plot(TIC[index])
#indivicual1-2
index<-c(seq(10,29),round(seq(30,65,length.out =5)),seq(66,79))
plot(TIC[index])
#indivicual1-2
index<-c(seq(10,29),round(seq(30,65,length.out =5)),seq(66,79))
create(list.files(dirOrigin,recursive = T,full.names = T)[2],paste(dir,"ind1/ind1-2.h5",sep="/"),indexTime=index)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T)[3])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#ind1-3
index<-c(seq(15,33),round(seq(34,58,length.out =5)),seq(59,70))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T)[3],paste(dir,"ind1/ind1-3.h5",sep="/"),indexTime=index)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T)[4])
list.files(dirOrigin,recursive = T,full.names = T)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[4])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#ind2-1
index<-c(seq(6,26),round(seq(27,48,length.out =5)),seq(49,63))
plot(TIC[index])
#ind2-1
index<-c(seq(6,26),round(seq(27,48,length.out =7)),seq(49,63))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[4],paste(dir,"ind2/ind2-1.h5",sep="/"),indexTime=index)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#ind2-2
index<-c(seq(11,34),round(seq(35,54,length.out =5)),seq(55,71))
plot(TIC[index])
#ind2-2
index<-c(seq(11,34),round(seq(35,54,length.out =6)),seq(55,71))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5],paste(dir,"ind2/ind2-2.h5",sep="/"),indexTime=index)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[6])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#ind3-3
index<-c(seq(7,24),round(seq(25,42,length.out =6)),seq(43,58))
plot(TIC[index])
#ind3-3
index<-c(seq(7,24),round(seq(25,42,length.out =8)),seq(43,58))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[6],paste(dir,"ind2/ind2-3.h5",sep="/"),indexTime=index)
library(ptairData)
create <- function( file.origine,file.new ,indexTime=NULL){
rhdf5::h5createFile(file.new)
read<-rhdf5::h5read(file.origine, "/", bit64conversion='bit64')
timVn<- read$TimingData$BufTimes
mzVn <- read$FullSpectra$MassAxis
rawAN <- read$FullSpectra$TofData
rawMN <- matrix(rawAN,
nrow = dim(rawAN)[1],
ncol = prod(tail(dim(rawAN),2)),
dimnames = list(mzVn, c(timVn))) #* 0.2 ns / 2.9 (single ion signal)
index_zero<-which(timVn==0)[-1] #index where timVn =0 except the first time
if(length(index_zero)!=0){
timVn<- timVn[-index_zero]
rawMN<- rawMN[,-index_zero]
}
## craete group and subgroup
listGroup <- rhdf5::h5ls(file.origine)
group<-listGroup[listGroup$otype ==  "H5I_GROUP",]
for( i in 1:dim(group)[1])
rhdf5::h5createGroup(file.new,paste(group$group[i],group$name[i],sep="/"))
## write data
data<-listGroup[listGroup$otype ==  "H5I_DATASET",]
## No change
DATASET<-paste(data$group,data$name,sep="/")
DATASETNochange<-  c( "/AcquisitionLog/Log",
"/AddTraces/PTR-Instrument/TwInfo" ,
"/AddTraces/PTR-Misc/TwInfo",
"/AddTraces/PTR-Reaction/TwInfo",
"/PTR-Concentration/TwInfo",
"/PTR-Peaktable/Info",
"/PTR-Peaktable/Data",
"/PTR-PrimaryIonSettings/Data",
"/PTR-PrimaryIonSettings/Info" ,
"/PTR-Transmission/Data",
"/PTR-Transmission/Info",
"/PeakData/PeakTable",
"/RawData/Ndigo5G/Temperature/TwInfo",
"/TPS2/TwInfo")
for(i in 1:dim(data)[1]){
harchi <- paste(data$group[i],data$name[i],sep="/")
if(harchi %in% DATASETNochange){
harchi_sep <- strsplit(harchi,"/")[[1]][-1]
if(length(harchi_sep)==3)
rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]][[harchi_sep[3]]],file.new,harchi)
if(length(harchi_sep)==2)
rhdf5::h5write(read[[harchi_sep[1]]][[harchi_sep[2]]],file.new,harchi)
}
}
## dim change
#tof <- which( ( 20.4 < mzVn & mzVn < 21.6) |  (56.4 < mzVn & mzVn <90.6)  )
tof <- which(( 20.4 < mzVn & mzVn < 21.6) | (50.3 < mzVn & mzVn <150.7))
mzVn_new <- mzVn[tof]
NbrSample <-length(mzVn_new)
#TIC <- colSums(rawMN)
#indLim<-ptairMS:::timeLimitFun(TIC,fracMaxTIC = 0.1)
# if( ncol(indLim) >2 ){
#   timVn_new <- timVn[
#     seq(
#       max(1 ,
#         (indLim["start",1]-5)
#         ) ,
#       min( (indLim["end",2]+5) ,
#          mean(indLim["end",2],indLim["start",3])
#          )
#     )]
# } else timVn_new <-timVn[ seq(max(1,indLim["start",1]-5),min(indLim["end",2]+5,length(timVn)))]
if(is.null(indexTime)) indexTime<-seq(1,length(timVn))
timVn_new<-timVn[indexTime]
NbrWrite <- ceiling(length(timVn_new)/10)
rawMN_new <- rawMN[tof, timVn_new]
rawAN_new <- array(rawMN_new, dim= c(NbrSample,1,10,NbrWrite))
DATASETChange <- DATASET[ ! DATASET %in% DATASETNochange]
ChangeTime<- c("/AddTraces/PTR-Instrument/TwData",
"/AddTraces/PTR-Misc/TwData",
"/AddTraces/PTR-Reaction/TwData" ,
"/FullSpectra/MassCalibration",
"/PTR-Concentration/TwData",
"/PeakData/PeakData",
"/RawData/Ndigo5G/Temperature/TwData",
"/TPS2/TwData",
"/TimingData/BufTimes")
## "/FullSpectra/TofData" faire a la main
for(i in 1:dim(data)[1]){
harchi <- paste(data$group[i],data$name[i],sep="/")
harchi_sep <- strsplit(harchi,"/")[[1]][-1]
data.i<-read
for (j in 1:length(harchi_sep)){
data.i <- data.i[[harchi_sep[j]]]
}
if(harchi %in% ChangeTime) {
dimNew <-dim(data.i)
dimNew[length(dimNew)] <- NbrWrite
data.i.new <- array(data.i, dim=dimNew)
rhdf5::h5write(data.i.new,file.new,harchi)
}
}
ChangeMass<- c("/FullSpectra/MassAxis" ,"/FullSpectra/SumSpectrum", "/FullSpectra/TofData")
rhdf5::h5write(mzVn_new,file.new, "/FullSpectra/MassAxis")
rhdf5::h5createDataset(file.new,"/FullSpectra/TofData", dim(rawAN_new), chunk = c(dim(rawAN_new)[1],1,10,1),level = 9)
rhdf5::h5write(rawAN_new,file.new, "/FullSpectra/TofData")
rhdf5::h5write(rowSums(rawMN_new),file.new, "/FullSpectra/SumSpectrum")
} #END function
dirOrigin<-"C:/Users/CR258086/Documents/Source/DataPtrMS/Healthy"
dir<-"C:/Users/CR258086/Documents/Source/ptairData/inst/extdata/exhaledAir"
#indivdual1-1
index<-c(seq(13,35),round(seq(36,67,length.out =5)),seq(68,87))
create(list.files(dirOrigin,recursive = T,full.names = T)[1],paste(dir,"ind1/ind1-1.h5",sep="/"),indexTime=index)
#indivicual1-2
index<-c(seq(9,29),round(seq(30,65,length.out =5)),seq(66,79))
create(list.files(dirOrigin,recursive = T,full.names = T)[2],paste(dir,"ind1/ind1-2.h5",sep="/"),indexTime=index)
#ind1-3
index<-c(seq(14,33),round(seq(34,58,length.out =5)),seq(59,70))
create(list.files(dirOrigin,recursive = T,full.names = T)[3],paste(dir,"ind1/ind1-3.h5",sep="/"),indexTime=index)
#ind2-1
index<-c(seq(5,26),round(seq(27,48,length.out =7)),seq(49,63))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[4],paste(dir,"ind2/ind2-1.h5",sep="/"),indexTime=index)
#ind2-2
index<-c(seq(10,34),round(seq(35,54,length.out =6)),seq(55,71))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5],paste(dir,"ind2/ind2-2.h5",sep="/"),indexTime=index)
#ind3-3
index<-c(seq(7,24),round(seq(25,42,length.out =8)),seq(43,58))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[6],paste(dir,"ind2/ind2-3.h5",sep="/"),indexTime=index)
library(ptairData)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[6])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[4])
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
raw
#ind2-2
index<-c(seq(14,39),round(seq(40,57,length.out =5)),seq(58,74))
plot(TIC[index])
#ind2-2
index<-c(seq(14,39),round(seq(40,57,length.out =6)),seq(58,74))
#ind2-2
index<-c(seq(5,26),round(seq(27,48,length.out =7)),seq(49,63))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5],paste(dir,"ind2/ind2-2.h5",sep="/"),indexTime=index)
#ind2-3
index<-c(seq(7,24),round(seq(25,42,length.out =8)),seq(43,58))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[6],paste(dir,"ind2/ind2-3.h5",sep="/"),indexTime=index)
#ind2-2
index<-c(seq(14,39),round(seq(40,57,length.out =6)),seq(58,74))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[4],paste(dir,"ind2/ind2-1.h5",sep="/"),indexTime=index)
library(ptairData)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5])
raw
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#ind2-2
index<-c(seq(16,49),round(seq(50,71,length.out =5)),seq(88))
plot(TIC[index])
#ind2-2
index<-c(seq(16,49),round(seq(50,71,length.out =5)),seq(72,88))
plot(TIC[index])
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
#ind2-2
index<-c(seq(62,86),round(seq(87,108,length.out =5)),seq(109,121))
plot(TIC[index])
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5],paste(dir,"ind2/ind2-2.h5",sep="/"),indexTime=index)
#ind2-1
index<-c(seq(5,26),round(seq(27,48,length.out =7)),seq(49,63))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[4],paste(dir,"ind2/ind2-1.h5",sep="/"),indexTime=index)
#ind2-3
index<-c(seq(7,24),round(seq(25,42,length.out =8)),seq(43,58))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[6],paste(dir,"ind2/ind2-3.h5",sep="/"),indexTime=index)
#ind2-2
index<-c(seq(62,86),round(seq(87,108,length.out =5)),seq(109,121))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5],paste(dir,"ind2/ind2-2.h5",sep="/"),indexTime=index)
library(ptairData)
raw<-readRaw(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5])
raw
TIC<-colSums(raw@rawM)
lim<-timeLimits(raw, fracMaxTIC = 0.1,plotDel = T)
lim
#ind2-2
index<-c(seq(11,34),round(seq(35,54,length.out =5)),seq(55,70))
plot(TIC[index])
#ind2-2
index<-c(seq(11,34),round(seq(35,54,length.out =5)),seq(55,70))
#ind2-1
index<-c(seq(5,26),round(seq(27,48,length.out =7)),seq(49,63))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[4],paste(dir,"ind2/ind2-1.h5",sep="/"),indexTime=index)
#ind2-3
index<-c(seq(7,24),round(seq(25,42,length.out =8)),seq(43,58))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[6],paste(dir,"ind2/ind2-3.h5",sep="/"),indexTime=index)
#ind2-2
index<-c(seq(11,34),round(seq(35,54,length.out =5)),seq(55,70))
create(list.files(dirOrigin,recursive = T,full.names = T,pattern = ".h5$")[5],paste(dir,"ind2/ind2-2.h5",sep="/"),indexTime=index)
library(ptairData)
